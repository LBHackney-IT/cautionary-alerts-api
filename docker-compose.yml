version: "3.2"

services:
  cautionary-alerts-api:
    image: cautionary-alerts-api
    build:
      context: .
      dockerfile: CautionaryAlertsApi/Dockerfile
      args:
      - LBHPACKAGESTOKEN=${LBHPACKAGESTOKEN}
    ports:
      - 3000:3000
    environment:
      - CONNECTION_STRING=Host=dev-database;Port=5432;Database=entitycorex;Username=postgres;Password=mypassword
    links:
      - dev-database
  dev-database:
    environment:
      - POSTGRES_PASSWORD=mypassword
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - ./database:/docker-entrypoint-initdb.d

  cautionary-alerts-api-test:
    image: cautionary-alerts-api-test
    build:
      context: .
      dockerfile: CautionaryAlertsApi.Tests/Dockerfile
      args:
      - LBHPACKAGESTOKEN=${LBHPACKAGESTOKEN}
      - SONAR_TOKEN=${SONAR_TOKEN}
    environment:
      - DB_HOST=test-database
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=mypassword
      - DB_DATABASE=testdb
      - Localstack_SnsServiceUrl=http://localstack:4566

    links:
      - test-database
      - localstack

  test-database:
    image: test-database
    build:
      context: .
      dockerfile: database/Dockerfile
    ports:
      - 5432:5432
    env_file:
      - database.env

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    hostname: awslocal
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sns
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      - "./.localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
